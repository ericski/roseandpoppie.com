files:
    "/opt/elasticbeanstalk/hooks/appdeploy/pre/04_getconfig.php":
        mode: "000755"
        owner: root
        group: root
        content: |
            #!/usr/bin/php
            <?php

            $accessKey = $_ENV['S3_KEY_ID'];
            $secretKey = $_ENV['S3_SECRET_KEY'];
            $bucket = 'roseandpoppieconfig';
            $expires = 15;

            // Calculate expiry time
            $expires = time() + intval(floatval($expires));
            // Fix the path; encode and sanitize
            $path = 'settings.php';
            // Path for signature starts with the bucket
            $signpath = '/'. $bucket .'/'. $path;
            // S3 friendly string to sign
            $signsz = implode("\n", $pieces = array('GET', null, null, $expires, $signpath));
            // Calculate the hash
            $signature = el_crypto_hmacSHA1($secretKey, $signsz);
            // Glue the URL ...
            $url = sprintf('http://%s.s3.amazonaws.com/%s', $bucket, $path);
            // ... to the query string ...
            $qs = http_build_query($pieces = array(
              'AWSAccessKeyId' => $accessKey,
              'Expires' => $expires,
              'Signature' => $signature,
            ));
            system("wget " . escapeshellarg($url.'?'.$qs) . ' -O settings.php');
            rename('settings.php', '/var/www/html/sites/default/settings.php');
            chmod('/var/www/html/sites/default/settings.php', 0400);
            chown('/var/www/html/sites/default/settings.php', 'webapp');


            /**
            * Calculate the HMAC SHA1 hash of a string.
            *
            * @param string $key The key to hash against
            * @param string $data The data to hash
            * @param int $blocksize Optional blocksize
            * @return string HMAC SHA1
            */
            function el_crypto_hmacSHA1($key, $data, $blocksize = 64) {
              if (strlen($key) > $blocksize) $key = pack('H*', sha1($key));
              $key = str_pad($key, $blocksize, chr(0x00));
              $ipad = str_repeat(chr(0x36), $blocksize);
              $opad = str_repeat(chr(0x5c), $blocksize);
              $hmac = pack( 'H*', sha1(
                ($key ^ $opad) . pack( 'H*', sha1(
                  ($key ^ $ipad) . $data
                ))
              ));
              return base64_encode($hmac);
            }
